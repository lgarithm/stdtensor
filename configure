#!/bin/bash
set -e

PREFIX=$(pwd)/local
USE_OPENCV=0
BUILD_TESTS=1
BUILD_DOCS=0

parse_args() {
    for i in "$@"; do
        case $i in
        --prefix=*)
            PREFIX="${i#*=}"
            ;;
        --use-opencv)
            USE_OPENCV=1
            ;;
        --no-tests)
            BUILD_TESTS=0
            ;;
        --docs)
            BUILD_DOCS=1
            ;;
        *)
            echo "unknown argument $1"
            exit
            ;;
        esac
    done
}

CMAKE_FLAGS=

add_cmake_flag() {
    CMAKE_FLAGS="${CMAKE_FLAGS} -D$1=$2"
}

add_cmake_flags() {
    if [ ! -z ${GTEST_GIT_URL} ]; then
        echo "Using GTEST_GIT_URL=${GTEST_GIT_URL}"
        add_cmake_flag GTEST_GIT_URL ${GTEST_GIT_URL}
    fi

    add_cmake_flag CMAKE_INSTALL_PREFIX ${PREFIX}
    add_cmake_flag USE_OPENCV ${USE_OPENCV}
    add_cmake_flag BUILD_TESTS ${BUILD_TESTS}
    add_cmake_flag BUILD_DOCS ${BUILD_DOCS}

    add_cmake_flag CMAKE_RUNTIME_OUTPUT_DIRECTORY $(pwd)/bin
    add_cmake_flag LIBRARY_OUTPUT_PATH $(pwd)/lib # TODO: upgrade to CMAKE_LIBRARY_OUTPUT_DIRECTORY
}

main() {
    parse_args $@
    add_cmake_flags

    echo "Using CMAKE_FLAGS=${CMAKE_FLAGS}"
    cmake . ${CMAKE_FLAGS}
}

main $@
