CMAKE_MINIMUM_REQUIRED(VERSION 3.5)
PROJECT(stdtensor)

SET(CMAKE_CXX_STANDARD 14)

FIND_PROGRAM(CLANG_TIDY_EXE NAMES "clang-tidy")
IF(CLANG_TIDY_EXE)
    SET(CMAKE_CXX_CLANG_TIDY clang-tidy)
ENDIF()

ADD_DEFINITIONS(-Wall)
ADD_DEFINITIONS(-Werror)
ADD_DEFINITIONS(-Wfatal-errors)

ADD_LIBRARY(stdtensor src/tensor.cpp)
TARGET_INCLUDE_DIRECTORIES(stdtensor PRIVATE ${CMAKE_SOURCE_DIR}/include)

INSTALL(DIRECTORY include DESTINATION .)
INSTALL(TARGETS stdtensor ARCHIVE DESTINATION lib)

OPTION(BUILD_TESTS "Build tests." ON)
OPTION(BUILD_BENCHMARKS "Build benchmarks." ON)
OPTION(BUILD_EXAMPLES "Build examples." ON)
OPTION(HAVE_CUDA "Have cuda_runtime.h." OFF)

IF(HAVE_CUDA)
    # noop
ELSE()
    ADD_DEFINITIONS(-DUSE_FAKE_CUDA_RUNTIME)
ENDIF()

IF(BUILD_TESTS)
    ENABLE_TESTING()
    INCLUDE(cmake/tests.cmake)
ENDIF()

IF(BUILD_BENCHMARKS)
    INCLUDE(cmake/benchmarks.cmake)
ENDIF()

IF(BUILD_EXAMPLES)
    INCLUDE(cmake/examples.cmake)
ENDIF()
